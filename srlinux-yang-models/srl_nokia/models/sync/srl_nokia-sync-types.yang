module srl_nokia-sync-types {
  yang-version 1.1;
  namespace "urn:srl_nokia/sync-types";
  prefix srl_nokia-sync-types;

  import srl_nokia-common {
    prefix srl_nokia-comm;
  }

  description
    "This module defines derived types for configuration and operational state data
     related to time management.";

  revision 2021-11-30 {
    description
      "SRLinux 21.11.1";
  }

  typedef ptp-profile {
    description
      "Specifies the PTP profile mode for the PTP clock.";
    type enumeration {
      enum itug8275dot1 {
        value 1;
      }
    }
  }

  typedef clock-mode-type {
    type enumeration {
      enum ptpdisabled {
        value 0;
      }
      enum ttsc {
        value 4;
      }
      enum tbc {
        value 5;
      }
    }
  }

  typedef ptp-clock-state {
    type enumeration {
      enum unknown {
        value 0;
        description
          "PTP clock state unknown";
      }
      enum freerun {
        value 2;
        description
          "PTP clock state is freerun";
      }
      enum holdover {
        value 3;
        description
          "PTP clock state is holdover";
      }
      enum acquiring {
        value 4;
        description
          "PTP clock state is acquiring";
      }
      enum phase-tracking {
        value 5;
        description
          "PTP clock state is phase-tracking";
      }
      enum locked {
        value 6;
        description
          "PTP clock state is locked";
      }
    }
    description
      "PTP clock state";
  }

  typedef time-interval-type {
    type int64;
    description
      "Time interval, expressed in nanoseconds, multiplied by 2^16.";
  }

  typedef time-reference-type {
    type enumeration {
      enum extTod {
        value 1;
        description
          "the PTP clock aligns the time to the external ToD signal";
      }
      enum ptp {
        value 2;
        description
          "the ptp clock aligns the time to the grandmaster";
      }
    }
  }

  typedef tod-msg-type {
    type enumeration {
      enum ccsa {
        value 0;
        description
          "use CCSA ToD message format type";
      }
      enum itu {
        value 1;
        description
          "use ITU-T ToD message format type";
      }
    }
  }

  typedef clock-identity-type {
    type binary {
      length "8";
    }
    description
      "Identifies unique entities within a PTP Network.
       The identity is an 8-octet array, constructed according
       to specifications in IEEE Std 1588";
    reference
      "IEEE Std 1588-2019: 5.3.4, 7.5.2.2";
  }

  typedef time-seconds-type {
    type binary {
      length "48";
    }
    units "seconds";
    description
      "Identifies seconds number of the time";
  }

  typedef time-nanoseconds-type {
    type binary {
      length "32";
    }
    units "nanaseconds";
    description
      "Identifies nanoseconds number of the time";
  }

  typedef delay-mechanism-enumeration {
    type enumeration {
      enum e2e {
        value 1;
        description
          "The port uses the delay request-response mechanism.";
      }
    }
    description
      "The propagation-delay measuring option used by the
       port.  Values for this enumeration are specified
       by the IEEE Std 1588 standard exclusively.";
    reference
      "IEEE Std 1588-2008: 8.2.5.4.4";
  }

  typedef port-state-enumeration {
    type enumeration {
      enum initializing {
        value 1;
        description
          "The port is initializing its data sets, hardware, and
           communication facilities.";
      }
      enum faulty {
        value 2;
        description
          "The port is in the fault state.";
      }
      enum disabled {
        value 3;
        description
          "The port is disabled and is not communicating PTP
           messages (other than possibly PTP management
           messages).";
      }
      enum listening {
        value 4;
        description
          "The port is listening for an Announce message.";
      }
      enum pre-master {
        value 5;
        description
          "The port is in the pre-master state.";
      }
      enum master {
        value 6;
        description
          "The port is behaving as a master port.";
      }
      enum passive {
        value 7;
        description
          "The port is in the passive state.";
      }
      enum uncalibrated {
        value 8;
        description
          "A master port has been selected, but the port is still
           in the uncalibrated state.";
      }
      enum slave {
        value 9;
        description
          "The port is synchronizing to the selected master port.";
      }
    }
    description
      "The current state of the protocol engine associated
       with the port.  Values for this enumeration are specified
       by the IEEE Std 1588 standard exclusively.";
    reference
      "IEEE Std 1588-2008: 8.2.5.3.1, 9.2.5";
  }

  typedef interface-ptp {
    type srl_nokia-comm:interface-name {
      length "3..20";
      pattern '(ethernet-([1-9](\d){0,1}(/[abcd])?(/[1-9](\d){0,1})?/(([1-9](\d){0,1})|(1[0-1]\d)|(12[0-8])))|'
            + 'otc-1/([1-8])|'
            + 'ethernet-1/x([1-4]))';
    }
  }

  typedef interface-freq {
    type srl_nokia-comm:interface-name {
      length "3..20";
      pattern '(ethernet-([1-9](\d){0,1}(/[abcd])?(/[1-9](\d){0,1})?/(([1-9](\d){0,1})|(1[0-1]\d)|(12[0-8])))|'
            + 'otc-1/([1-8])|'
            + 'BITS|'
            + 'ethernet-1/x([1-4]))';
    }
  }

  typedef ql-set-enumeration {
    type enumeration {
      enum auto {
        value 255;
        description
          "No overide. Automatic use of recovered QL for current reference.";
      }
      enum prc {
        value 2;
        description
          "QL of PRC.";
      }
      enum ssu-a {
        value 4;
        description
          "QL of SSU-A.";
      }
      enum ssu-b {
        value 8;
        description
          "QL of SSU-B.";
      }
      enum sec {
        value 11;
        description
          "QL of SEC.";
      }
      enum prs {
        value 1;
        description
          "QL of PRS.";
      }
      enum stu {
        value 0;
        description
          "QL of STU.";
      }
      enum st2 {
        value 7;
        description
          "QL of Stratum 2.";
      }
      enum tnc {
        value 5;
        description
          "QL of TNC.";
      }
      enum st3e {
        value 13;
        description
          "QL of Stratum 3E.";
      }
      enum st3 {
        value 10;
        description
          "QL of Stratum 3.";
      }
    }
  }

  typedef ql-rx-enumeration {
    type enumeration {
      enum not-applicable {
        value 253;
        description
          "Not applicable QL.";
      }
      enum unknown {
        value 254;
        description
          "QL of unknown.";
      }
      enum prc {
        value 2;
        description
          "QL of PRC.";
      }
      enum ssu-a {
        value 4;
        description
          "QL of SSU-A.";
      }
      enum ssu-b {
        value 8;
        description
          "QL of SSU-B.";
      }
      enum sec {
        value 11;
        description
          "QL of SEC.";
      }
      enum dnu {
        value 15;
        description
          "QL of Do Not Use.";
      }
      enum prs {
        value 1;
        description
          "QL of PRS.";
      }
      enum stu {
        value 0;
        description
          "QL of STU.";
      }
      enum st2 {
        value 7;
        description
          "QL of Stratum 2.";
      }
      enum tnc {
        value 5;
        description
          "QL of TNC.";
      }
      enum st3e {
        value 13;
        description
          "QL of Stratum 3E.";
      }
      enum st3 {
        value 10;
        description
          "QL of Stratum 3.";
      }
      enum smc {
        value 12;
        description
          "QL of SMC.";
      }
      enum st4 {
        value 14;
        description
          "QL of Stratum 4.";
      }
      enum pno {
        value 200;
        description
          "QL of PNO.";
      }
    }
  }

  typedef ql-status-enumeration {
    type enumeration {
      enum valid {
        value 0;
        description
          "QL is valid.";
      }
      enum invalid {
        value 2;
        description
          "QL is invalid.";
      }
      enum not-supported {
        value 3;
        description
          "QL is not supported.";
      }
      enum not-applicable {
        value 4;
        description
          "QL is not applicable.";
      }
    }
  }

  typedef ref-status-enumeration {
    type enumeration {
      enum not-assigned {
        value 0;
        description
          "Reference has not been assigned.";
      }
      enum normal {
        value 1;
        description
          "Reference is in normal state.";
      }
      enum signal-fail {
        value 2;
        description
          "Reference is experiencing signal failure.";
      }
      enum wtr {
        value 3;
        description
          "Reference is recovered and the WTR timer is running.";
      }
    }
  }

  typedef ref-switch-state-enumeration {
    type enumeration {
      enum no-request {
        value 0;
        description
          "No request (no switch command is active).";
      }
      enum force {
        value 1;
        description
          "Currently, forced switch to line timing reference or internal clock.";
      }
      enum manual {
        value 2;
        description
          "Currently, manual switch to line timing reference.";
      }
      enum auto {
        value 3;
        description
          "Currently, automatic system synchronization switch of line timing reference is taking place.";
      }
    }
  }

  typedef freq-clock-state-enumeration {
    type enumeration {
      enum locked {
        value 0;
        description
          "Frequency clock is locked to a line timing reference signal.";
      }
      enum holdover {
        value 1;
        description
          "Auto holdover mode for the frequency clock.";
      }
      enum free-run {
        value 2;
        description
          "Auto free-running mode for the frequency clock.";
      }
      enum forced-free-run {
        value 3;
        description
          "Forced free-running mode for the frequency clock.";
      }
    }
  }

  typedef bits-signal-type-enumeration {
    type enumeration {
      enum 2mhz {
        value 0;
        description
          "2 MHz reference signal.";
      }
      enum unframed-e1 {
        value 1;
        description
          "E1 unframed.";
      }
      enum framed-e1 {
        value 2;
        description
          "E1 framed.";
      }
      enum framed-e1-ssm {
        value 3;
        description
          "E1 framed with SSM.";
      }
      enum ds1-sf {
        value 4;
        description
          "DS1 Extended Superframe.";
      }
      enum ds1-esf {
        value 5;
        description
          "DS1 Extended Superframe.";
      }
    }
  }

  typedef synce-mode-enumeration {
    type enumeration {
      enum ansi {
        value 0;
        description
          "ANSI / SONET mode for SyncE.";
      }
      enum etsi {
        value 1;
        description
          "ETSI / SDH mode for SyncE.";
      }
    }
  }
}
