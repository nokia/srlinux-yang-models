module srl_nokia-bgp-vpn {
  yang-version 1.1;
  namespace "urn:nokia.com:srlinux:bgp:bgp-vpn";
  prefix srl_nokia-bgp-vpn;

  import srl_nokia-common {
    prefix srl_nokia-comm;
  }
  import srl_nokia-features {
    prefix srl_nokia-feat;
  }
  import srl_nokia-network-instance {
    prefix srl_nokia-netinst;
  }
  import srl_nokia-bgp {
    prefix srl-bgp;
  }
  import srl_nokia-extensions {
    prefix srl_nokia-ext;
  }
  import srl_nokia-policy-types {
    prefix srl_nokia-pol-types;
  }

  organization
    "Nokia";
  contact
    "Nokia SR Linux Support
     Web: <http://www.nokia.com>";
  description
    "This yang file models configuration and state of the bgp-vpn protocols (EVPN and IPVPN).";

  revision 2024-07-31 {
    description
      "SRLinux 24.7.1";
  }
  revision 2024-03-31 {
    description
      "SRLinux 24.3.1";
  }
  revision 2023-10-31 {
    description
      "SRLinux 23.10.1";
  }
  revision 2022-06-30 {
    description
      "SRLinux 22.6.1";
  }
  revision 2021-03-31 {
    description
      "SRLinux 21.3.1";
  }

  grouping bgp-vpn-top {
    description
      "Top-level grouping containing a list of bgp-vpn instances.";
    container bgp-vpn {
      presence "Configuration and state of bgp-vpn.";
      must '(/srl_nokia-netinst:network-instance[srl_nokia-netinst:name = current()/../../srl_nokia-netinst:name]/srl_nokia-netinst:type != "srl_nokia-netinst:default")' {
        error-message "The bgp-vpn configuration is not possible on network-instance of type default.";
      }
      must '(/srl_nokia-netinst:network-instance[srl_nokia-netinst:name = current()/../../srl_nokia-netinst:name]/srl_nokia-netinst:type != "srl_nokia-netinst:host")' {
        error-message "The bgp-vpn configuration is not possible on network-instance of type host.";
      }
      container backup-paths {
        if-feature "srl_nokia-feat:bgp-backup-path-frr-vpn or srl_nokia-feat:bgp-backup-path-frr-evpn";
        description
          "Configuration of BGP VPN fast reroute";
        container ipv4-unicast {
          description
            "Configuration of IPv4 unicast backup paths";
          leaf install {
            type boolean;
            default "false";
            description
              "Install a backup path for every NLRI in the address family, when a suitable one exists";
            must ". = false() or current()/../../../../../srl_nokia-netinst:type = 'srl_nokia-netinst:ip-vrf'" {
              error-message "backup-paths can only be installed in network-instances of type ip-vrf";
            }
            must '. = false() or not (current()/../../../../../srl_nokia-netinst:protocols/srl_nokia-netinst:bgp-evpn)' {
              srl_nokia-ext:if-feature "not srl_nokia-feat:bgp-backup-path-frr-evpn";
              error-message "backup-paths not supported when EVPN is configured";
            }
          }
        }
        container ipv6-unicast {
          description
            "Configuration of IPv6 unicast backup paths";
          leaf install {
            type boolean;
            default "false";
            description
              "Install a backup path for every NLRI in the address family, when a suitable one exists";
            must ". = false() or current()/../../../../../srl_nokia-netinst:type = 'srl_nokia-netinst:ip-vrf'" {
              error-message "backup-paths can only be installed in network-instances of type ip-vrf";
            }
            must '. = false() or not (current()/../../../../../srl_nokia-netinst:protocols/srl_nokia-netinst:bgp-evpn)' {
              srl_nokia-ext:if-feature "not srl_nokia-feat:bgp-backup-path-frr-evpn";
              error-message "backup-paths not supported when EVPN is configured";
            }
          }
        }
      }
      container combined-ecmp {
        if-feature "srl_nokia-feat:combined-bgp-ecmp";
        presence "Enable the combination of BGP PE-CE, EVPN IFL and/or VPN-IP routes into the same ECMP set";
        description
          "Combine BGP owners into the same ECMP set

           When enabled, candidate BGP PE-CE routes and BGP VPN routes (EVPN IFL or VPN-IP) to the same prefix are
           combined into a single ECMP set. A single route with a combined next hop group is installed in the
           route table. If different BGP owners are combined and have different configured ecmp maximum values,
           the minimum of the maximum configured values is considered for the combined ECMP set.";
        must "current()/../../../srl_nokia-netinst:type = 'srl_nokia-netinst:ip-vrf'" {
          error-message "combined BGP ECMP can only be enabled in network-instances of type ip-vrf";
        }
      }
      list bgp-instance {
        key "id";
        max-elements 2;
        description
          "List of bgp-vpn instances configured in the network-instance. Only one instance allowed in the current release.";
        leaf id {
          type uint8 {
            range "1..2";
          }
          description
            "The index of the bgp-vpn instance";
        }
        container route-distinguisher {
          description
            "Route Distinguisher (RD) of the bgp-vpn instance.";
          leaf rd {
            srl_nokia-ext:show-importance "high";
            type srl_nokia-comm:route-distinguisher;
            description
              "Route Distinguisher (RD) in the bgp-vpn instance. When used for evpn and if not configured, the RD is auto-derived
               as <ip-address>:<evi> where 'ip-address' is the ipv4 address associated to the subinterface lo0.1.";
            must 'not(starts-with(string(.), "0:"))' {
              error-message "invalid value 0:*";
            }
            must 'not(starts-with(string(.), "0.0:"))' {
              error-message "invalid value 0.0:*";
            }
            must 'not(starts-with(string(.), "0.0.0.0:") and (number(substring-after(string(.), ":")) < 513))' {
              error-message "route-distinguisher value reserved";
            }
          }
          leaf route-distinguisher-origin {
            config false;
            srl_nokia-ext:show-importance "high";
            type enumeration {
              enum auto-derived-from-evi;
              enum auto-derived-from-system-ip:0;
              enum manual;
              enum none;
            }
            description
              "Origin of the operational Route Distinguisher (RD) of the bgp-vpn instance.

                'Auto-derived-from-evi' refers to an RD that is automatically allocated with the format <ip-address>:<evi>
                where 'ip-address' is the ipv4 address associated to the subinterface lo0.1.
                'Auto-derived-from-system-ip:0' refers to the RD for the EVPN Ethernet Segment routes that is automatically allocated with the format <ip-address>:0
                where 'ip-address' is the ipv4 address associated to the subinterface lo0.1.
                'Manual' refers to an RD that is configured.
                'None' indicates that the RD is neither configured nor auto-derived.";
          }
        }
        container route-target {
          description
            "Route Target (RT) of the bgp-vpn instance.";
          leaf export-rt {
            srl_nokia-ext:show-importance "high";
            type srl_nokia-pol-types:bgp-ext-community-type;
            must "starts-with(.,'target')";
            description
              "Export Route Target (RT) in the bgp-vpn instance. When used for evpn and if not configured, the RT is auto-derived
               with the format <asn>:<evi> where 'asn' is the autonomous-system configured in the network-instance default.";
          }
          leaf export-route-target-origin {
            config false;
            srl_nokia-ext:show-importance "high";
            type enumeration {
              enum auto-derived-from-evi;
              enum auto-derived-from-esi-bytes-1-6;
              enum manual;
              enum none;
            }
            description
              "Origin of the operational export Route Target (RT) of the bgp-vpn instance.
               'Auto-derived-from-evi' refers to an RT that is automatically allocated with the format <asn>:<evi>
               where 'asn' is the autonomous-system-number configured in the network-instance default.
               'Auto-derived-from-esi-bytes-1-6' refers to the ES-import RT for the EVPN Ethernet Segment routes that is derived from bytes 1 to 6 of the Ethernet Segment Identifier of the route.
               'Manual' refers to an export RT that is configured.
               'None' indicates that the export RT is neither configured nor auto-derived.";
          }
          leaf import-rt {
            srl_nokia-ext:show-importance "high";
            type srl_nokia-pol-types:bgp-ext-community-type;
            must "starts-with(.,'target')";
            description
              "Import Route Target (RT) in the bgp-vpn instance. When used for evpn and if not configured, the RT is
               auto-derived with the format <asn>:<evi> where 'asn' is the autonomous-system configured in the network-instance default.";
          }
          leaf import-route-target-origin {
            config false;
            srl_nokia-ext:show-importance "high";
            type enumeration {
              enum auto-derived-from-evi;
              enum auto-derived-from-esi-bytes-1-6;
              enum manual;
              enum none;
            }
            description
              "Origin of the operational import Route Target (RT) of the bgp-vpn instance.
               'Auto-derived-from-evi' refers to an RT that is automatically allocated with the format <asn>:<evi>
                where 'asn' is the autonomous-system-number configured in the network-instance default.
               'Auto-derived-from-esi-bytes-1-6' refers to the ES-import RT for the EVPN Ethernet Segment routes that is derived from bytes 1 to 6 of the Ethernet Segment Identifier of the route.
               'Manual' refers to an import RT that is configured.
               'None' indicates that the import RT is neither configured nor auto-derived.";
          }
        }
        uses srl-bgp:bgp-policy;
        leaf oper-down-reason {
          config false;
          srl_nokia-ext:show-importance "high";
          type enumeration {
            enum no-loopback-address-or-rd;
            enum no-autonomous-system-or-rt;
            enum network-instance-oper-down;
            enum bad-rd-format;
            enum none;
          }
          description
            "Reason for bgp-instance being down";
        }
      }
    }
  }

  augment "/srl_nokia-netinst:network-instance/srl_nokia-netinst:protocols" {
    uses bgp-vpn-top;
  }
}
